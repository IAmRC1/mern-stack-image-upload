{"ast":null,"code":"var _jsxFileName = \"/var/www/html/file-upload/frontend/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nconst base64Flag = 'data:image/jpeg;base64,';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      imageSrc: \"\",\n      uploadedFiles: [],\n      imageName: \"\"\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append('name', this.state.imageName);\n      data.append('attachment', this.state.file);\n      axios.post(\"http://localhost:5000/upload\", data).then(res => {\n        alert(res.data.message);\n        this.setState({\n          file: null,\n          imageSrc: \"\",\n          uploadedFiles: [...this.state.uploadedFiles, res.data]\n        });\n        this.myFormRef.reset();\n      }).catch(err => alert(err));\n    };\n\n    this.handleChange = e => {\n      if (e.target.files) {\n        this.setState({\n          file: e.target.files[0],\n          imageSrc: URL.createObjectURL(e.target.files[0])\n        });\n      }\n\n      if (e.target.name === \"imagename\") {\n        this.setState({\n          imageName: e.target.value\n        });\n      }\n    };\n\n    this.arrayBufferToBase64 = buffer => {\n      var binary = '';\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach(b => binary += String.fromCharCode(b));\n      return window.btoa(binary);\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/upload\").then(res => {\n      this.setState({\n        uploadedFiles: res.data.img\n      });\n    }).catch(err => console.log('err', err));\n  }\n\n  render() {\n    console.log('this.state', this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"MERN Stack File Upload\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      ref: el => this.myFormRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      onClick: () => this.setState({\n        imageSrc: \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"imagename\",\n      onChange: this.handleChange,\n      placeholder: \"Enter image name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.state.uploadedFiles.map((img, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"uploaded-image\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: base64Flag + this.arrayBufferToBase64(img.img.data.data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, img.imageName));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/file-upload/frontend/src/App.js"],"names":["React","axios","base64Flag","App","Component","state","file","imageSrc","uploadedFiles","imageName","handleSubmit","e","preventDefault","data","FormData","append","post","then","res","alert","message","setState","myFormRef","reset","catch","err","handleChange","target","files","URL","createObjectURL","name","value","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","componentDidMount","get","img","console","log","render","el","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst base64Flag = 'data:image/jpeg;base64,';\n\nclass App extends React.Component {\n\n  state = {\n    file: null,\n    imageSrc: \"\",\n    uploadedFiles: [],\n    imageName: \"\"\n  };\n\n  componentDidMount(){\n    axios.get(\"http://localhost:5000/upload\")\n    .then(res => {\n      this.setState({ uploadedFiles: res.data.img })\n    })\n    .catch(err => console.log('err', err))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('name', this.state.imageName);\n    data.append('attachment', this.state.file);\n    axios.post(\"http://localhost:5000/upload\", data)\n      .then((res) => {\n        alert(res.data.message)\n        this.setState({ file: null, imageSrc: \"\", uploadedFiles: [...this.state.uploadedFiles, res.data]})\n        this.myFormRef.reset();\n      })\n      .catch((err) => alert(err));\n  }\n\n  handleChange = (e) => {\n    if(e.target.files){\n      this.setState({ \n        file: e.target.files[0],\n        imageSrc: URL.createObjectURL(e.target.files[0]) \n      });\n    }\n    if(e.target.name === \"imagename\"){\n      this.setState({ imageName: e.target.value})\n    }\n  }\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  };\n\n  render() {\n    console.log('this.state', this.state)\n    return (\n      <>\n        <h1>MERN Stack File Upload</h1>\n        <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\" ref={(el) => this.myFormRef = el}>\n          <input type=\"file\" onChange={this.handleChange} required />\n          <button type=\"submit\">Upload</button>\n          <button type=\"reset\" onClick={() => this.setState({ imageSrc: \"\" })}>Clear</button>\n          <input type=\"text\" name=\"imagename\" onChange={this.handleChange} placeholder=\"Enter image name\" required />\n        </form>\n        <img src={this.state.imageSrc} />\n        <div className=\"grid\">\n          {this.state.uploadedFiles.map((img,i) => {\n            return <div className=\"uploaded-image\" key={i}>\n              <img src={base64Flag+this.arrayBufferToBase64(img.img.data.data)} />\n              <p>{img.imageName}</p>\n            </div>\n          })}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}