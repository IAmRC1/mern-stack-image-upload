{"ast":null,"code":"var _jsxFileName = \"/var/www/html/file-upload/frontend/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nlet uploadedimagessrc = [];\nconst base64Flag = 'data:image/jpeg;base64,';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      imagesrc: \"\",\n      uploadedfiles: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append('attachment', this.state.file);\n      axios.post(\"http://localhost:5000/upload\", data).then(res => alert(res.data.message)).catch(err => alert(err));\n    };\n\n    this.handleChange = e => {\n      if (e.target.files) {\n        this.setState({\n          file: e.target.files[0],\n          imagesrc: URL.createObjectURL(e.target.files[0])\n        });\n      }\n    };\n\n    this.arrayBufferToBase64 = buffer => {\n      var binary = '';\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach(b => binary += String.fromCharCode(b));\n      return window.btoa(binary);\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/upload\").then(res => {\n      this.setState({\n        uploadedfiles: res.data.img\n      }, () => {\n        return this.state.uploadedfiles.map(file => {\n          const imageStr = this.arrayBufferToBase64(file.img.data.data);\n          uploadedimagessrc.push(base64Flag + imageStr);\n        });\n      });\n      console.log('uploadedimagessrc', uploadedimagessrc);\n    }).catch(err => console.log('err', err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"MERN Stack File Upload\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      onClick: () => this.setState({\n        imagesrc: \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Clear\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imagesrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, uploadedimagessrc.map((src, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"uploaded-image\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 60\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/file-upload/frontend/src/App.js"],"names":["React","axios","uploadedimagessrc","base64Flag","App","Component","state","file","imagesrc","uploadedfiles","handleSubmit","e","preventDefault","data","FormData","append","post","then","res","alert","message","catch","err","handleChange","target","files","setState","URL","createObjectURL","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","componentDidMount","get","img","map","imageStr","push","console","log","render","src","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nlet uploadedimagessrc = [];\nconst base64Flag = 'data:image/jpeg;base64,';\n\nclass App extends React.Component {\n\n  state = {\n    file: null,\n    imagesrc: \"\",\n    uploadedfiles: [],\n  };\n\n  componentDidMount(){\n    axios.get(\"http://localhost:5000/upload\")\n    .then(res => {\n      this.setState({ uploadedfiles: res.data.img }, () => {\n        return this.state.uploadedfiles.map(file => {\n          const imageStr = this.arrayBufferToBase64(file.img.data.data);\n          uploadedimagessrc.push(base64Flag+imageStr)\n        })\n      })\n      console.log('uploadedimagessrc', uploadedimagessrc)\n    })\n    .catch(err => console.log('err', err))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('attachment', this.state.file);\n    axios.post(\"http://localhost:5000/upload\", data)\n      .then((res) => alert(res.data.message))\n      .catch((err) => alert(err));\n  }\n\n  handleChange = (e) => {\n    if(e.target.files){\n      this.setState({ \n        file: e.target.files[0],\n        imagesrc: URL.createObjectURL(e.target.files[0]) \n      });\n    }\n  }\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  };\n\n  render() {\n    return (\n      <>\n        <h1>MERN Stack File Upload</h1>\n        <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n          <input type=\"file\" onChange= {this.handleChange} />\n          <button type=\"submit\">Upload</button>\n          <button type=\"reset\" onClick={() => this.setState({ imagesrc: \"\" })}>Clear</button>\n        </form>\n        <img src={this.state.imagesrc} />\n        <div className=\"grid\">\n          {uploadedimagessrc.map((src,i) => {\n            return <div className=\"uploaded-image\" key={i}><img src={src} /></div>\n          })}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}